/*
 * Copyright 2022 ByteDance and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * CDP开放接口
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2023-02-10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package code.byted.cdp.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * CdpPropertyVo
 */

@javax.annotation.Generated(value = "code.byted.cdp.client.JavaClientCodegen", date = "2023-08-11T11:38:37.562+08:00[Asia/Shanghai]")
public class CdpPropertyVo {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("dataSourceId")
  private Integer dataSourceId = null;

  @SerializedName("fieldName")
  private String fieldName = null;

  @SerializedName("filedType")
  private String filedType = null;

  @SerializedName("fieldDesc")
  private String fieldDesc = null;

  @SerializedName("expr")
  private String expr = null;

  @SerializedName("showName")
  private String showName = null;

  @SerializedName("display")
  private Integer display = null;

  public CdpPropertyVo id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public CdpPropertyVo dataSourceId(Integer dataSourceId) {
    this.dataSourceId = dataSourceId;
    return this;
  }

   /**
   * Get dataSourceId
   * @return dataSourceId
  **/
  @Schema(description = "")
  public Integer getDataSourceId() {
    return dataSourceId;
  }

  public void setDataSourceId(Integer dataSourceId) {
    this.dataSourceId = dataSourceId;
  }

  public CdpPropertyVo fieldName(String fieldName) {
    this.fieldName = fieldName;
    return this;
  }

   /**
   * Get fieldName
   * @return fieldName
  **/
  @Schema(description = "")
  public String getFieldName() {
    return fieldName;
  }

  public void setFieldName(String fieldName) {
    this.fieldName = fieldName;
  }

  public CdpPropertyVo filedType(String filedType) {
    this.filedType = filedType;
    return this;
  }

   /**
   * Get filedType
   * @return filedType
  **/
  @Schema(description = "")
  public String getFiledType() {
    return filedType;
  }

  public void setFiledType(String filedType) {
    this.filedType = filedType;
  }

  public CdpPropertyVo fieldDesc(String fieldDesc) {
    this.fieldDesc = fieldDesc;
    return this;
  }

   /**
   * Get fieldDesc
   * @return fieldDesc
  **/
  @Schema(description = "")
  public String getFieldDesc() {
    return fieldDesc;
  }

  public void setFieldDesc(String fieldDesc) {
    this.fieldDesc = fieldDesc;
  }

  public CdpPropertyVo expr(String expr) {
    this.expr = expr;
    return this;
  }

   /**
   * Get expr
   * @return expr
  **/
  @Schema(description = "")
  public String getExpr() {
    return expr;
  }

  public void setExpr(String expr) {
    this.expr = expr;
  }

  public CdpPropertyVo showName(String showName) {
    this.showName = showName;
    return this;
  }

   /**
   * Get showName
   * @return showName
  **/
  @Schema(description = "")
  public String getShowName() {
    return showName;
  }

  public void setShowName(String showName) {
    this.showName = showName;
  }

  public CdpPropertyVo display(Integer display) {
    this.display = display;
    return this;
  }

   /**
   * Get display
   * @return display
  **/
  @Schema(description = "")
  public Integer getDisplay() {
    return display;
  }

  public void setDisplay(Integer display) {
    this.display = display;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CdpPropertyVo cdpPropertyVo = (CdpPropertyVo) o;
    return Objects.equals(this.id, cdpPropertyVo.id) &&
        Objects.equals(this.dataSourceId, cdpPropertyVo.dataSourceId) &&
        Objects.equals(this.fieldName, cdpPropertyVo.fieldName) &&
        Objects.equals(this.filedType, cdpPropertyVo.filedType) &&
        Objects.equals(this.fieldDesc, cdpPropertyVo.fieldDesc) &&
        Objects.equals(this.expr, cdpPropertyVo.expr) &&
        Objects.equals(this.showName, cdpPropertyVo.showName) &&
        Objects.equals(this.display, cdpPropertyVo.display);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, dataSourceId, fieldName, filedType, fieldDesc, expr, showName, display);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CdpPropertyVo {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    dataSourceId: ").append(toIndentedString(dataSourceId)).append("\n");
    sb.append("    fieldName: ").append(toIndentedString(fieldName)).append("\n");
    sb.append("    filedType: ").append(toIndentedString(filedType)).append("\n");
    sb.append("    fieldDesc: ").append(toIndentedString(fieldDesc)).append("\n");
    sb.append("    expr: ").append(toIndentedString(expr)).append("\n");
    sb.append("    showName: ").append(toIndentedString(showName)).append("\n");
    sb.append("    display: ").append(toIndentedString(display)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
