/*
 * Copyright 2022 ByteDance and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * CDP开放接口
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2023-02-10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package code.byted.cdp.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * SegInfo
 */

@javax.annotation.Generated(value = "code.byted.cdp.client.JavaClientCodegen", date = "2023-03-23T12:09:51.626+08:00[Asia/Shanghai]")
public class SegInfo {
  @SerializedName("segName")
  private String segName = null;

  @SerializedName("segCount")
  private Long segCount = null;

  @SerializedName("coverCount")
  private Long coverCount = null;

  @SerializedName("coverage")
  private Double coverage = null;

  public SegInfo segName(String segName) {
    this.segName = segName;
    return this;
  }

   /**
   * Get segName
   * @return segName
  **/
  @Schema(description = "")
  public String getSegName() {
    return segName;
  }

  public void setSegName(String segName) {
    this.segName = segName;
  }

  public SegInfo segCount(Long segCount) {
    this.segCount = segCount;
    return this;
  }

   /**
   * Get segCount
   * @return segCount
  **/
  @Schema(description = "")
  public Long getSegCount() {
    return segCount;
  }

  public void setSegCount(Long segCount) {
    this.segCount = segCount;
  }

  public SegInfo coverCount(Long coverCount) {
    this.coverCount = coverCount;
    return this;
  }

   /**
   * Get coverCount
   * @return coverCount
  **/
  @Schema(description = "")
  public Long getCoverCount() {
    return coverCount;
  }

  public void setCoverCount(Long coverCount) {
    this.coverCount = coverCount;
  }

  public SegInfo coverage(Double coverage) {
    this.coverage = coverage;
    return this;
  }

   /**
   * Get coverage
   * @return coverage
  **/
  @Schema(description = "")
  public Double getCoverage() {
    return coverage;
  }

  public void setCoverage(Double coverage) {
    this.coverage = coverage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SegInfo segInfo = (SegInfo) o;
    return Objects.equals(this.segName, segInfo.segName) &&
        Objects.equals(this.segCount, segInfo.segCount) &&
        Objects.equals(this.coverCount, segInfo.coverCount) &&
        Objects.equals(this.coverage, segInfo.coverage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(segName, segCount, coverCount, coverage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SegInfo {\n");
    
    sb.append("    segName: ").append(toIndentedString(segName)).append("\n");
    sb.append("    segCount: ").append(toIndentedString(segCount)).append("\n");
    sb.append("    coverCount: ").append(toIndentedString(coverCount)).append("\n");
    sb.append("    coverage: ").append(toIndentedString(coverage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
