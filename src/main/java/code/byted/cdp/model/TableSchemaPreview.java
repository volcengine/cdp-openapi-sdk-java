/*
 * Copyright 2022 ByteDance and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * CDP开放接口
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2023-02-10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package code.byted.cdp.model;

import java.util.Objects;
import java.util.Arrays;
import code.byted.cdp.model.AssetType;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * TableSchemaPreview
 */

@javax.annotation.Generated(value = "code.byted.cdp.client.JavaClientCodegen", date = "2023-09-08T11:48:39.432+08:00[Asia/Shanghai]")
public class TableSchemaPreview {
  @SerializedName("assetId")
  private String assetId = null;

  @SerializedName("assetName")
  private String assetName = null;

  @SerializedName("assetType")
  private AssetType assetType = null;

  @SerializedName("assetTypeName")
  private String assetTypeName = null;

  @SerializedName("colName")
  private String colName = null;

  @SerializedName("colType")
  private String colType = null;

  @SerializedName("disabled")
  private Boolean disabled = null;

  @SerializedName("dependable")
  private Boolean dependable = null;

  @SerializedName("dependEditEnable")
  private Boolean dependEditEnable = null;

  public TableSchemaPreview assetId(String assetId) {
    this.assetId = assetId;
    return this;
  }

   /**
   * Get assetId
   * @return assetId
  **/
  @Schema(description = "")
  public String getAssetId() {
    return assetId;
  }

  public void setAssetId(String assetId) {
    this.assetId = assetId;
  }

  public TableSchemaPreview assetName(String assetName) {
    this.assetName = assetName;
    return this;
  }

   /**
   * Get assetName
   * @return assetName
  **/
  @Schema(required = true, description = "")
  public String getAssetName() {
    return assetName;
  }

  public void setAssetName(String assetName) {
    this.assetName = assetName;
  }

  public TableSchemaPreview assetType(AssetType assetType) {
    this.assetType = assetType;
    return this;
  }

   /**
   * Get assetType
   * @return assetType
  **/
  @Schema(required = true, description = "")
  public AssetType getAssetType() {
    return assetType;
  }

  public void setAssetType(AssetType assetType) {
    this.assetType = assetType;
  }

  public TableSchemaPreview assetTypeName(String assetTypeName) {
    this.assetTypeName = assetTypeName;
    return this;
  }

   /**
   * Get assetTypeName
   * @return assetTypeName
  **/
  @Schema(required = true, description = "")
  public String getAssetTypeName() {
    return assetTypeName;
  }

  public void setAssetTypeName(String assetTypeName) {
    this.assetTypeName = assetTypeName;
  }

  public TableSchemaPreview colName(String colName) {
    this.colName = colName;
    return this;
  }

   /**
   * Get colName
   * @return colName
  **/
  @Schema(required = true, description = "")
  public String getColName() {
    return colName;
  }

  public void setColName(String colName) {
    this.colName = colName;
  }

  public TableSchemaPreview colType(String colType) {
    this.colType = colType;
    return this;
  }

   /**
   * Get colType
   * @return colType
  **/
  @Schema(required = true, description = "")
  public String getColType() {
    return colType;
  }

  public void setColType(String colType) {
    this.colType = colType;
  }

  public TableSchemaPreview disabled(Boolean disabled) {
    this.disabled = disabled;
    return this;
  }

   /**
   * Get disabled
   * @return disabled
  **/
  @Schema(required = true, description = "")
  public Boolean isDisabled() {
    return disabled;
  }

  public void setDisabled(Boolean disabled) {
    this.disabled = disabled;
  }

  public TableSchemaPreview dependable(Boolean dependable) {
    this.dependable = dependable;
    return this;
  }

   /**
   * Get dependable
   * @return dependable
  **/
  @Schema(required = true, description = "")
  public Boolean isDependable() {
    return dependable;
  }

  public void setDependable(Boolean dependable) {
    this.dependable = dependable;
  }

  public TableSchemaPreview dependEditEnable(Boolean dependEditEnable) {
    this.dependEditEnable = dependEditEnable;
    return this;
  }

   /**
   * Get dependEditEnable
   * @return dependEditEnable
  **/
  @Schema(required = true, description = "")
  public Boolean isDependEditEnable() {
    return dependEditEnable;
  }

  public void setDependEditEnable(Boolean dependEditEnable) {
    this.dependEditEnable = dependEditEnable;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TableSchemaPreview tableSchemaPreview = (TableSchemaPreview) o;
    return Objects.equals(this.assetId, tableSchemaPreview.assetId) &&
        Objects.equals(this.assetName, tableSchemaPreview.assetName) &&
        Objects.equals(this.assetType, tableSchemaPreview.assetType) &&
        Objects.equals(this.assetTypeName, tableSchemaPreview.assetTypeName) &&
        Objects.equals(this.colName, tableSchemaPreview.colName) &&
        Objects.equals(this.colType, tableSchemaPreview.colType) &&
        Objects.equals(this.disabled, tableSchemaPreview.disabled) &&
        Objects.equals(this.dependable, tableSchemaPreview.dependable) &&
        Objects.equals(this.dependEditEnable, tableSchemaPreview.dependEditEnable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assetId, assetName, assetType, assetTypeName, colName, colType, disabled, dependable, dependEditEnable);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TableSchemaPreview {\n");
    
    sb.append("    assetId: ").append(toIndentedString(assetId)).append("\n");
    sb.append("    assetName: ").append(toIndentedString(assetName)).append("\n");
    sb.append("    assetType: ").append(toIndentedString(assetType)).append("\n");
    sb.append("    assetTypeName: ").append(toIndentedString(assetTypeName)).append("\n");
    sb.append("    colName: ").append(toIndentedString(colName)).append("\n");
    sb.append("    colType: ").append(toIndentedString(colType)).append("\n");
    sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
    sb.append("    dependable: ").append(toIndentedString(dependable)).append("\n");
    sb.append("    dependEditEnable: ").append(toIndentedString(dependEditEnable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
