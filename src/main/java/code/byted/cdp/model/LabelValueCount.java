/*
 * Copyright 2022 ByteDance and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * CDP开放接口
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2023-02-10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package code.byted.cdp.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * LabelValueCount
 */

@javax.annotation.Generated(value = "code.byted.cdp.client.JavaClientCodegen", date = "2023-07-04T16:56:05.487+08:00[Asia/Shanghai]")
public class LabelValueCount {
  @SerializedName("count")
  private Integer count = null;

  @SerializedName("originValue")
  private Object originValue = null;

  @SerializedName("mappingValue")
  private String mappingValue = null;

  @SerializedName("tagCoverage")
  private String tagCoverage = null;

  @SerializedName("totalCoverage")
  private String totalCoverage = null;

  public LabelValueCount count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * 当前标签枚举值覆盖人数
   * @return count
  **/
  @Schema(description = "当前标签枚举值覆盖人数")
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }

  public LabelValueCount originValue(Object originValue) {
    this.originValue = originValue;
    return this;
  }

   /**
   * 当前标签枚举值原始值
   * @return originValue
  **/
  @Schema(description = "当前标签枚举值原始值")
  public Object getOriginValue() {
    return originValue;
  }

  public void setOriginValue(Object originValue) {
    this.originValue = originValue;
  }

  public LabelValueCount mappingValue(String mappingValue) {
    this.mappingValue = mappingValue;
    return this;
  }

   /**
   * 当前标签枚举值映射值，如果未做映射则等于原始值
   * @return mappingValue
  **/
  @Schema(description = "当前标签枚举值映射值，如果未做映射则等于原始值")
  public String getMappingValue() {
    return mappingValue;
  }

  public void setMappingValue(String mappingValue) {
    this.mappingValue = mappingValue;
  }

  public LabelValueCount tagCoverage(String tagCoverage) {
    this.tagCoverage = tagCoverage;
    return this;
  }

   /**
   * 当前标签枚举值映射值覆盖人数占当前标签总覆盖人数的比例
   * @return tagCoverage
  **/
  @Schema(description = "当前标签枚举值映射值覆盖人数占当前标签总覆盖人数的比例")
  public String getTagCoverage() {
    return tagCoverage;
  }

  public void setTagCoverage(String tagCoverage) {
    this.tagCoverage = tagCoverage;
  }

  public LabelValueCount totalCoverage(String totalCoverage) {
    this.totalCoverage = totalCoverage;
    return this;
  }

   /**
   * 当前标签枚举值映射值覆盖人数占当前项目总覆盖人数的比例
   * @return totalCoverage
  **/
  @Schema(description = "当前标签枚举值映射值覆盖人数占当前项目总覆盖人数的比例")
  public String getTotalCoverage() {
    return totalCoverage;
  }

  public void setTotalCoverage(String totalCoverage) {
    this.totalCoverage = totalCoverage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LabelValueCount labelValueCount = (LabelValueCount) o;
    return Objects.equals(this.count, labelValueCount.count) &&
        Objects.equals(this.originValue, labelValueCount.originValue) &&
        Objects.equals(this.mappingValue, labelValueCount.mappingValue) &&
        Objects.equals(this.tagCoverage, labelValueCount.tagCoverage) &&
        Objects.equals(this.totalCoverage, labelValueCount.totalCoverage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(count, originValue, mappingValue, tagCoverage, totalCoverage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LabelValueCount {\n");
    
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    originValue: ").append(toIndentedString(originValue)).append("\n");
    sb.append("    mappingValue: ").append(toIndentedString(mappingValue)).append("\n");
    sb.append("    tagCoverage: ").append(toIndentedString(tagCoverage)).append("\n");
    sb.append("    totalCoverage: ").append(toIndentedString(totalCoverage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
