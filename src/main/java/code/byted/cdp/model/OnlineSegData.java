/*
 * Copyright 2022 ByteDance and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * CDP开放接口
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2023-02-10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package code.byted.cdp.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * OnlineSegData
 */

@javax.annotation.Generated(value = "code.byted.cdp.client.JavaClientCodegen", date = "2023-08-25T10:31:52.572+08:00[Asia/Shanghai]")
public class OnlineSegData {
  @SerializedName("id")
  private String id = null;

  @SerializedName("id_type_code")
  private String idTypeCode = null;

  @SerializedName("segment_ids")
  private List<String> segmentIds = null;

  public OnlineSegData id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public OnlineSegData idTypeCode(String idTypeCode) {
    this.idTypeCode = idTypeCode;
    return this;
  }

   /**
   * Get idTypeCode
   * @return idTypeCode
  **/
  @Schema(description = "")
  public String getIdTypeCode() {
    return idTypeCode;
  }

  public void setIdTypeCode(String idTypeCode) {
    this.idTypeCode = idTypeCode;
  }

  public OnlineSegData segmentIds(List<String> segmentIds) {
    this.segmentIds = segmentIds;
    return this;
  }

  public OnlineSegData addSegmentIdsItem(String segmentIdsItem) {
    if (this.segmentIds == null) {
      this.segmentIds = new ArrayList<String>();
    }
    this.segmentIds.add(segmentIdsItem);
    return this;
  }

   /**
   * Get segmentIds
   * @return segmentIds
  **/
  @Schema(description = "")
  public List<String> getSegmentIds() {
    return segmentIds;
  }

  public void setSegmentIds(List<String> segmentIds) {
    this.segmentIds = segmentIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OnlineSegData onlineSegData = (OnlineSegData) o;
    return Objects.equals(this.id, onlineSegData.id) &&
        Objects.equals(this.idTypeCode, onlineSegData.idTypeCode) &&
        Objects.equals(this.segmentIds, onlineSegData.segmentIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, idTypeCode, segmentIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OnlineSegData {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idTypeCode: ").append(toIndentedString(idTypeCode)).append("\n");
    sb.append("    segmentIds: ").append(toIndentedString(segmentIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
