/*
 * Copyright 2022 ByteDance and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * CDP开放接口
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2023-02-10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package code.byted.cdp.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * 访问统计-核心指标趋势统计请求
 */
@Schema(description = "访问统计-核心指标趋势统计请求")
@javax.annotation.Generated(value = "code.byted.cdp.client.JavaClientCodegen", date = "2023-09-20T16:39:48.664+08:00[Asia/Shanghai]")
public class TendencyStatisticsReq {
  @SerializedName("startDate")
  private OffsetDateTime startDate = null;

  @SerializedName("endDate")
  private OffsetDateTime endDate = null;

  @SerializedName("modules")
  private List<List<String>> modules = null;

  @SerializedName("excludeUsers")
  private List<String> excludeUsers = null;

  @SerializedName("period")
  private String period = null;

  @SerializedName("groupBy")
  private String groupBy = null;

  @SerializedName("indexName")
  private String indexName = null;

  public TendencyStatisticsReq startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * 业务开始日期
   * @return startDate
  **/
  @Schema(description = "业务开始日期")
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }

  public TendencyStatisticsReq endDate(OffsetDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * 业务结束日期
   * @return endDate
  **/
  @Schema(description = "业务结束日期")
  public OffsetDateTime getEndDate() {
    return endDate;
  }

  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }

  public TendencyStatisticsReq modules(List<List<String>> modules) {
    this.modules = modules;
    return this;
  }

  public TendencyStatisticsReq addModulesItem(List<String> modulesItem) {
    if (this.modules == null) {
      this.modules = new ArrayList<List<String>>();
    }
    this.modules.add(modulesItem);
    return this;
  }

   /**
   * 选择模块
   * @return modules
  **/
  @Schema(example = "[[\"homePage\", \"homeMain\"], [\"homePage\", \"homePage\"]]", description = "选择模块")
  public List<List<String>> getModules() {
    return modules;
  }

  public void setModules(List<List<String>> modules) {
    this.modules = modules;
  }

  public TendencyStatisticsReq excludeUsers(List<String> excludeUsers) {
    this.excludeUsers = excludeUsers;
    return this;
  }

  public TendencyStatisticsReq addExcludeUsersItem(String excludeUsersItem) {
    if (this.excludeUsers == null) {
      this.excludeUsers = new ArrayList<String>();
    }
    this.excludeUsers.add(excludeUsersItem);
    return this;
  }

   /**
   * 剔除用户ID
   * @return excludeUsers
  **/
  @Schema(description = "剔除用户ID")
  public List<String> getExcludeUsers() {
    return excludeUsers;
  }

  public void setExcludeUsers(List<String> excludeUsers) {
    this.excludeUsers = excludeUsers;
  }

  public TendencyStatisticsReq period(String period) {
    this.period = period;
    return this;
  }

   /**
   * 统计周期
   * @return period
  **/
  @Schema(description = "统计周期")
  public String getPeriod() {
    return period;
  }

  public void setPeriod(String period) {
    this.period = period;
  }

  public TendencyStatisticsReq groupBy(String groupBy) {
    this.groupBy = groupBy;
    return this;
  }

   /**
   * 查看方式
   * @return groupBy
  **/
  @Schema(description = "查看方式")
  public String getGroupBy() {
    return groupBy;
  }

  public void setGroupBy(String groupBy) {
    this.groupBy = groupBy;
  }

  public TendencyStatisticsReq indexName(String indexName) {
    this.indexName = indexName;
    return this;
  }

   /**
   * 指标名称
   * @return indexName
  **/
  @Schema(description = "指标名称")
  public String getIndexName() {
    return indexName;
  }

  public void setIndexName(String indexName) {
    this.indexName = indexName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TendencyStatisticsReq tendencyStatisticsReq = (TendencyStatisticsReq) o;
    return Objects.equals(this.startDate, tendencyStatisticsReq.startDate) &&
        Objects.equals(this.endDate, tendencyStatisticsReq.endDate) &&
        Objects.equals(this.modules, tendencyStatisticsReq.modules) &&
        Objects.equals(this.excludeUsers, tendencyStatisticsReq.excludeUsers) &&
        Objects.equals(this.period, tendencyStatisticsReq.period) &&
        Objects.equals(this.groupBy, tendencyStatisticsReq.groupBy) &&
        Objects.equals(this.indexName, tendencyStatisticsReq.indexName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(startDate, endDate, modules, excludeUsers, period, groupBy, indexName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TendencyStatisticsReq {\n");
    
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    modules: ").append(toIndentedString(modules)).append("\n");
    sb.append("    excludeUsers: ").append(toIndentedString(excludeUsers)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    groupBy: ").append(toIndentedString(groupBy)).append("\n");
    sb.append("    indexName: ").append(toIndentedString(indexName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
