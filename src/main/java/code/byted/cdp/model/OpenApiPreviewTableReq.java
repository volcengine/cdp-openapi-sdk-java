/*
 * Copyright 2022 ByteDance and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * CDP开放接口
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2023-02-10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package code.byted.cdp.model;

import java.util.Objects;
import java.util.Arrays;
import code.byted.cdp.model.PropertyItem;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * OpenApiPreviewTableReq
 */

@javax.annotation.Generated(value = "code.byted.cdp.client.JavaClientCodegen", date = "2023-09-28T16:52:49.276+08:00[Asia/Shanghai]")
public class OpenApiPreviewTableReq {
  @SerializedName("subjectId")
  private Integer subjectId = null;

  @SerializedName("tagIds")
  private List<Integer> tagIds = null;

  @SerializedName("idTypeId")
  private List<Integer> idTypeId = null;

  @SerializedName("segIds")
  private List<Integer> segIds = null;

  @SerializedName("properties")
  private List<PropertyItem> properties = null;

  public OpenApiPreviewTableReq subjectId(Integer subjectId) {
    this.subjectId = subjectId;
    return this;
  }

   /**
   * Get subjectId
   * @return subjectId
  **/
  @Schema(required = true, description = "")
  public Integer getSubjectId() {
    return subjectId;
  }

  public void setSubjectId(Integer subjectId) {
    this.subjectId = subjectId;
  }

  public OpenApiPreviewTableReq tagIds(List<Integer> tagIds) {
    this.tagIds = tagIds;
    return this;
  }

  public OpenApiPreviewTableReq addTagIdsItem(Integer tagIdsItem) {
    if (this.tagIds == null) {
      this.tagIds = new ArrayList<Integer>();
    }
    this.tagIds.add(tagIdsItem);
    return this;
  }

   /**
   * Get tagIds
   * @return tagIds
  **/
  @Schema(description = "")
  public List<Integer> getTagIds() {
    return tagIds;
  }

  public void setTagIds(List<Integer> tagIds) {
    this.tagIds = tagIds;
  }

  public OpenApiPreviewTableReq idTypeId(List<Integer> idTypeId) {
    this.idTypeId = idTypeId;
    return this;
  }

  public OpenApiPreviewTableReq addIdTypeIdItem(Integer idTypeIdItem) {
    if (this.idTypeId == null) {
      this.idTypeId = new ArrayList<Integer>();
    }
    this.idTypeId.add(idTypeIdItem);
    return this;
  }

   /**
   * Get idTypeId
   * @return idTypeId
  **/
  @Schema(description = "")
  public List<Integer> getIdTypeId() {
    return idTypeId;
  }

  public void setIdTypeId(List<Integer> idTypeId) {
    this.idTypeId = idTypeId;
  }

  public OpenApiPreviewTableReq segIds(List<Integer> segIds) {
    this.segIds = segIds;
    return this;
  }

  public OpenApiPreviewTableReq addSegIdsItem(Integer segIdsItem) {
    if (this.segIds == null) {
      this.segIds = new ArrayList<Integer>();
    }
    this.segIds.add(segIdsItem);
    return this;
  }

   /**
   * Get segIds
   * @return segIds
  **/
  @Schema(description = "")
  public List<Integer> getSegIds() {
    return segIds;
  }

  public void setSegIds(List<Integer> segIds) {
    this.segIds = segIds;
  }

  public OpenApiPreviewTableReq properties(List<PropertyItem> properties) {
    this.properties = properties;
    return this;
  }

  public OpenApiPreviewTableReq addPropertiesItem(PropertyItem propertiesItem) {
    if (this.properties == null) {
      this.properties = new ArrayList<PropertyItem>();
    }
    this.properties.add(propertiesItem);
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @Schema(description = "")
  public List<PropertyItem> getProperties() {
    return properties;
  }

  public void setProperties(List<PropertyItem> properties) {
    this.properties = properties;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OpenApiPreviewTableReq openApiPreviewTableReq = (OpenApiPreviewTableReq) o;
    return Objects.equals(this.subjectId, openApiPreviewTableReq.subjectId) &&
        Objects.equals(this.tagIds, openApiPreviewTableReq.tagIds) &&
        Objects.equals(this.idTypeId, openApiPreviewTableReq.idTypeId) &&
        Objects.equals(this.segIds, openApiPreviewTableReq.segIds) &&
        Objects.equals(this.properties, openApiPreviewTableReq.properties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subjectId, tagIds, idTypeId, segIds, properties);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OpenApiPreviewTableReq {\n");
    
    sb.append("    subjectId: ").append(toIndentedString(subjectId)).append("\n");
    sb.append("    tagIds: ").append(toIndentedString(tagIds)).append("\n");
    sb.append("    idTypeId: ").append(toIndentedString(idTypeId)).append("\n");
    sb.append("    segIds: ").append(toIndentedString(segIds)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
