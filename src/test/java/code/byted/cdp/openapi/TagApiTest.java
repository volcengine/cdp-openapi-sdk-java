/*
 * Copyright 2022 ByteDance and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * CDP开放接口
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2023-02-10
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package code.byted.cdp.openapi;

import code.byted.cdp.model.ByteDanceNormalResponseString;
import code.byted.cdp.model.ByteDanceSeqResponseOpenApiManualTagInfo;
import code.byted.cdp.model.ByteDanceSeqResponseSeqDomainGroupedTags;
import code.byted.cdp.model.ByteDanceSeqResponseTagValueResp;
import code.byted.cdp.model.ManualPersonTagRequest;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for TagApi
 */
@Ignore
public class TagApiTest {

    private final TagApi api = new TagApi();

    /**
     * 添加或者修改某个用户身上的人工标签
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void addOrModifyManualTagsTest() throws Exception {
        ManualPersonTagRequest body = null;
        String tenantCode = null;
        ByteDanceNormalResponseString response = api.addOrModifyManualTags(body, tenantCode);

        // TODO: test validations
    }
    /**
     * 删除某个用户身上的人工标签
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteManualTagsInUserTest() throws Exception {
        String tenantCode = null;
        Long baseId = null;
        Integer tagId = null;
        ByteDanceNormalResponseString response = api.deleteManualTagsInUser(tenantCode, baseId, tagId);

        // TODO: test validations
    }
    /**
     * 查询某个用户身上的人工标签列表
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getManualTagsListTest() throws Exception {
        String tenantCode = null;
        ByteDanceSeqResponseOpenApiManualTagInfo response = api.getManualTagsList(tenantCode);

        // TODO: test validations
    }
    /**
     * 获取某个标签的取值
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getTagValuesTest() throws Exception {
        String tenantCode = null;
        Integer tagId = null;
        ByteDanceSeqResponseTagValueResp response = api.getTagValues(tenantCode, tagId);

        // TODO: test validations
    }
    /**
     * 获取所有标签列表，包含各个标签的取值
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getTagsListTest() throws Exception {
        String tenantCode = null;
        Integer idType = null;
        Boolean discardValue = null;
        ByteDanceSeqResponseSeqDomainGroupedTags response = api.getTagsList(tenantCode, idType, discardValue);

        // TODO: test validations
    }
}
